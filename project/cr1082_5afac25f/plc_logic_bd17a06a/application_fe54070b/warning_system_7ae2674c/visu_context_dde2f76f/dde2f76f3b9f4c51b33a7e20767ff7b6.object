{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)dde2f76f-3b9f-4c51-b33a-7e20767ff7b6","ParentGuid":"(Guid)fe54070b-3512-4a2f-b490-a57c15f4bfb5","Name":"(string)visu_context","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}},{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)7ae2674c-dfc0-4fc1-bcf3-0c9907b49433"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","bool":"System.Boolean","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)(* This program handles some interface tasks.  It:\n\n- Changes the button lights (on/off and color) depending on which buttons are active and various status conditions.\n- Turns off the audible alarm if you go to the Warnings screen.\n- Displays contextual popups if there's an active Warning and the user has navigated to the corresponding screen.\n- Generates a notification if the software version has changed.\n\nEach visualization screen gets its own IF/THEN statement and set of button light settings.   Sadly, CASE does not support strings in structured text.\n*)\n\t\n\n\n\nIF NOT (pvars.redWarningPresent\t\t\t\t//  If we don't have any active warnings, then just leave the warning log button light on.\n\tOR pvars.yellowWarningPresent\n\tOR pvars.blueWarningPresent) THEN\n\t\tflasher := TRUE;\nEND_IF\n\n\nIF VisuElems.CurrentVisu <> previousvisu\t\t//  Has the visualization changed?\n\tOR update_now THEN\t\t\t\t\t\t\t//  Or has a manual update been requested?   If so:\n\t\tupdate_now := FALSE;\t\t\t\t\t//  Reset our manual update trigger and run through the whole context sequence...\n\n\t//  If the flag is set for a contextual Warning pop-up, switch to that Warning detail screen, then disable the flag.\n\n\tFOR myCounter := 16 TO 1 BY -1 DO\n\t\tIF (pVars.myWarnings[myCounter].contextual_visu = VisuElems.CurrentVisu)\t\t\t//  Is there a warning set to pop-up on the current screen?\n\t\t\tAND (pVars.myWarnings [myCounter].fixed = FALSE)\t\t\t\t\t\t\t\t//  Is it unfixed?  (We don't want to pop-up a warning on things that aren't relevent any more!)\n\t\t\tAND pVars.myWarnings[myCounter].pop_up_contextual = TRUE THEN\t\t\t\t\t//  If this warning is set to create a contextual pop-up\n\t\t\t\tVisuElems.CurrentVisu := pVars.myWarnings[myCounter].detail_warning_visu;   //  Set the current visualization to the warning detail visualization for that Warning.\n\t\t\t\tpVars.myWarnings[myCounter].pop_up_contextual := FALSE;\t\t\t\t\t\t//  Clear our flag to pop up contextually so it doesn't keep happening.\n\t\tEND_IF\n\tEND_FOR\n\t\n\t\n\t\n\t\n\tpreviousvisu := VisuElems.CurrentVisu;\n\nEND_IF\n","LineInfoPersistence":"(string)dde2f76f-3b9f-4c51-b33a-7e20767ff7b6_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)PROGRAM visu_context\nVAR\n\tpreviousvisu: STRING := 'null';\t\t\t\t\t\t//   The last visualization we responded to.  Used to prevent the code from triggering when nothing has changed.  Pre-loaded with 'null'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//   so the system will trigger on initial startup.   (Otherwise the button lights are wrong until after the first visu change.)\n\toption_clicks: INT;\t\t\t\t\t\t\t\t\t//   This tracks how many times somebody has pressed the right arrow button while in the Options screen.   Used to decide when to show the hidden config button.\n\tmyCounter: INT;\t\t\t\t\t\t\t\t\t\t//   Used for some loops\n\t\t\t//  The function block that adjusts screen brightness.\n\tstartup_ran: BOOL;\t\t\t\t\t\t\t\t\t//  Turn to TRUE after we complete any startup tasks.\n\tshow_detail_screen: BOOL;\n\n\tchange_splash_screen: BOOL;\t\t\t\t\t\t\t//  Install a new splash screen.\n\tnew_software_version_notice: warning_message := (informational := TRUE, detail_warning_visu := 'W173', short_Description := 'System software updated');\n\t\t//  This struct contains the actual color settings and on/off settings for the physical button backlights.\n\tflasher: BOOL;\t\t\t\t\t\t\t\t\t\t\t//  Turns the warning button lights on and off.\n\tflash_time: TIME;\nEND_VAR\nVAR_INPUT\n\tupdate_now: BOOL:= 1;\t\t\t\t\t\t\t\t//  Set to TRUE to cause the button lights to update without a change in visu.\nEND_VAR\n","LineInfoPersistence":"(string)dde2f76f-3b9f-4c51-b33a-7e20767ff7b6_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)965","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}