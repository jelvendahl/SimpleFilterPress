{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)3333a3c7-a566-4338-8356-5195dd2b03af","ParentGuid":"(Guid)3bc25518-2022-4768-a8c7-d2d021c7a0af","Name":"(string)AL2330_or_AL2331","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)8ac092e5-3128-4e26-9e7e-11016c6684f2","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"8ac092e5","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\n//  Bit mapping for these blocks is defined in the IO-Link Device Description doc at:  https://www.ifm.com/us/en/product/AL2331?tab=documents\n//  This action supports four different blocks, which appear to have identical mapping.   The smaller blocks simply don't use the bits that turn on the\n//  'extra' ports on the larger blocks.\n\noutput_word_1.8 := x1_0_pin2;   //  consolidate all the individual on/off bits that the program has set into a single word\noutput_word_1.0 := x1_1_pin2;\t//  Pin 2 on all the ports is controlled by the same word\noutput_word_1.9 := x1_2_pin2;\noutput_word_1.1 := x1_3_pin2;\noutput_word_1.10 := x1_4_pin2;\noutput_word_1.2 := x1_5_pin2;\noutput_word_1.11 := x1_6_pin2;\noutput_word_1.3 := x1_7_pin2;\noutput_word_1.12 := x1_8_pin2;\noutput_word_1.4 := x1_9_pin2;\n\noutput_word_0.8 := x1_0_pin4;   //  consolidate all the individual on/off bits that the program has set into a single word\noutput_word_0.0 := x1_1_pin4;\t//  Pin 4 on all the ports is controlled by the same word\noutput_word_0.9 := x1_2_pin4;\noutput_word_0.1 := x1_3_pin4;\noutput_word_0.10 := x1_4_pin4;\noutput_word_0.2 := x1_5_pin4;\noutput_word_0.11 := x1_6_pin4;\noutput_word_0.3 := x1_7_pin4;\noutput_word_0.12 := x1_8_pin4;\noutput_word_0.4 := x1_9_pin4;\n\nIO_Link_port.write_word_0 := output_word_0;\t //   Write our consolidated words to the registers of the output block\nIO_Link_port.write_word_1 := output_word_1;\n\n\n\n//  Set our 'power_supply_problem' flag to match the 'power supply problem' bits in the device:\n\npower_supply_problem := IO_Link_port.read_word_2.7 OR IO_Link_port.read_word_2.15;\n\n//  We could differentiate between loss of power to the right or left side of the block (power comes in to each side on seperate wires) but the value of that information seems very limitted.\n\n\n//  Below we check the 'port shorted' bits and if any are TRUE (there's a short) we set the flag that we see a short and note which port is shorted.\n\nIF IO_Link_port.read_word_2.0 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.1'; END_IF \nIF IO_Link_port.read_word_2.1 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.3'; END_IF\nIF IO_Link_port.read_word_2.2 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.5'; END_IF\nIF IO_Link_port.read_word_2.3 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.7'; END_IF\nIF IO_Link_port.read_word_2.4 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.9'; END_IF\n\nIF IO_Link_port.read_word_2.8 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.0'; END_IF\nIF IO_Link_port.read_word_2.9 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.2'; END_IF\nIF IO_Link_port.read_word_2.10 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.4'; END_IF\nIF IO_Link_port.read_word_2.11 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.6'; END_IF\nIF IO_Link_port.read_word_2.12 THEN output_port_short_circuited := TRUE; shorted_port_description := 'X 1.8'; END_IF","LineInfoPersistence":"(string)3333a3c7-a566-4338-8356-5195dd2b03af_Impl_LineIds"}}}},"UniqueIdGenerator":"(string)63"}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","8ac092e5":"{8ac092e5-3128-4e26-9e7e-11016c6684f2}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}