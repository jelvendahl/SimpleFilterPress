{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)bfc94197-1a91-4c54-80f1-14b88b6147fa","ParentGuid":"(Guid)fe54070b-3512-4a2f-b490-a57c15f4bfb5","Name":"(string)Input_Block","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)5825fb06-bd92-4341-a5ee-78c697d7ccb3"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\n//  Check which input block we are dealing with, and map the bits accordingly.   The bit mapping is providing by the manufacturer's documentation.   In the case of IFM blocks, the inputs are mapped to the first two words of process data.\n\nIF NOT IO_Link_port.master_disconnected\t\t\t\t// If the master block is disconnected, don't update the pins.  This causes the object to 'hold' the last set of values, preventing an outbreak of incorrect faults.\n\tAND NOT IO_Link_port.not_connected\t\t\t\t// Don't update if the input block is disconnected.  This causes the object to 'hold' the last set of values, preventing an outbreak of incorrect faults.\n\tAND io_link_port.vendor_ID = 310 THEN\t\t\t// If the connected device is an IFM model (ID# 310) then match up the model number:\n\tCASE IO_Link_port.device_ID OF\n\n\t940: Input_Block.AL2x4x_blocks();  \t\t// 940 is an AL2341 OR an AL2241, with 10 ports offering two inputs per port.\n\n\t995: Input_Block.AL2x4x_blocks();  \t\t// 995 is an AL2340 OR an AL2240, with 6 ports offering two inputs per port.\n\t\n\t555: Input_Block.AL240x_block();\t\t// 555 is an AL2401 with 8 ports, offering two inputs per port.\n\t\n\t554: Input_Block.AL240x_block();\t\t// 554 is an AL2400 with 4 ports, offering two inputs per port.\n\t\n\tEND_CASE\nEND_IF\n\n\n\n//    WARNINGS       WARNINGS     WARNINGS\n\n//   UNKNOWN SENSOR WARNING!!      This warning checks if the device ID is an unfamiliar one OR if the vendor ID is not IFM's (310).\n//   Keep a close eye on the grouping of the parentheses!\n\nUnknown_device_warning (OK :=\n\tIO_Link_port.not_connected\t\t\t\t\t\t//  if we don't see anything connected, then we don't want to generate an 'unknown' warning\n\tOR ((IO_Link_port.device_ID = 940\t\t\t\t//  We are OK if we are connected to an AL2341 or AL 2241\n\tOR IO_Link_port.device_ID = 555\t\t\t\t\t//  or we are connected to an AL2401\n\tOR IO_Link_port.device_ID = 554\t\t\t\t\t//  or we are connected to an AL2400\n\tOR IO_Link_port.device_ID = 995)\t\t\t\t//  or we are connected to an AL2340/AL2240\n\tAND IO_Link_port.vendor_ID = 310),\t\t\t\t//  and it's an IFM device\n\ttime_delay := 10,\t\t\t\t\t\t\t\t//  Wait for ten secods to confirm error before sending the warning message\n\twarning_message := unknown_device_message);\n\n\n//  DEVICE DISCONNECTED WARNING!!\n//    This section checks if a sensor or device is connected.\n\ndisconnected_block_warning (OK :=\n\tNOT (IO_Link_port.not_connected OR IO_Link_port.data_invalid),\t\t//  We are OK if the Master block isn't reporting that the block is unresponsive or not comprehensible.\n\twarning_message := disconnected_block_message,\n\ttime_delay := 10); \t\t\t\t\t\t\t\t//  Set a 10 second time delay\n\n\n//  DEVICE SHORT CIRCUIT WARNING!!\n\n//    This section checks if a sensor or device is shorted (drawing too much power).\n\nshorted_input_block_warning (OK :=\n\tNOT IO_Link_port.short_circuit,\n\twarning_message := shorted_input_block_message);\n\n\n//  This section sets the 'input block available' flag based on whether or not we've seen a serious problem with that device.\n//  This flag can be used by the system to decide to stop running, etc.\n\nIF NOT disconnected_block_warning.warning_sent\t\t\t\t//  If the Master block is connected to something\n\tAND NOT shorted_input_block_warning.warning_sent\t\t//  and we don't have a short circuit\n\tAND NOT Unknown_device_warning.warning_sent\t\t\t\t//  and we understand whatever device is connected\n\tAND NOT IO_Link_port.master_disconnected THEN\t\t\t//  and the Master block is OK, then:\n\t\tinput_block_available := TRUE;\t\t\t\t\t\t//  Note that the input block is working and available.\n\tELSE\n\t\tinput_block_available := FALSE;\t\t\t\t\t\t//  Or not.  :-)\nEND_IF\n\n","LineInfoPersistence":"(string)bfc94197-1a91-4c54-80f1-14b88b6147fa_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//  This program is a hardware abstraction layer.\n//  It monitors an input block and maps the data to POU outputs (so an input on pin 4 of Port X1.1 of any type input block will all affect 'X1_1_pin4' of the POU.)\n\n//  This was originally created because of the AL2401 block, which has a non-standard memory space compared to the other blocks.\n\n//  It also provides standard Warnings for the block (disconnected, shorted, wrong device (on the specified port.)\n\n//  Don't forget to edit the text (and possibly graphics) of the three core Warnings (unknown sensor, disconnected, and shorted) to match your system's hardware.  (For instance, which port is the input block connected to?)\n\n//   This program currently supports:\n//  \t-IFM AL2340 6 port input block (orange)  \t\t\t\t\t\thttps://www.ifm.com/us/en/product/AL2340\n//  \t-IFM AL2240 6 port input block (gray, higher washdown rating)  \thttps://www.ifm.com/us/en/product/AL2240\n//\t\t-IFM AL2401 8 port input block (orange, white label markers)  \thttps://www.ifm.com/us/en/product/AL2401\n//\t\t-IFM AL2400\t4 port input block (orange, white label markers)    https://www.ifm.com/us/en/product/AL2400\n//  \t-IFM AL2341 10 port input block (orange) \t\t\t\t\t\thttps://www.ifm.com/us/en/product/AL2341\n//\t    -IFM AL2241 10 port input block (gray, higher washdown rating)  https://www.ifm.com/us/en/product/AL2241\n\n//   The input blocks that vary only by washdown rating (gray vs. orange shell) have the same device ID numbers.\n\n//  New sensors can easily be added; just create a new conditional that, if it sees the vendor ID # and device ID # of the new input block, then map bits accordingly.\n\n//  Last modified:  1/30/2024 by Nathan\n//  Tested:\n\nPROGRAM Input_Block\nVAR\t\n\n//   WARNINGS\n\t\n//  Unknown device Warning\n\nUnknown_device_warning: create_warning;\n\t\nunknown_device_message: warning_message := (red := TRUE, pop_up_everywhere := TRUE, detail_warning_visu := 'W68', short_Description := 'Unknown input block');\n\n//  Disconnected input block Warning\n\ndisconnected_block_message: warning_message := (red := TRUE, pop_up_everywhere := TRUE, detail_warning_visu := 'W65', short_Description := 'Input block disconnected');\n\ndisconnected_block_warning: create_warning;\n\n\t//  Shorted block Warning\n\nshorted_input_block_message: warning_message := (red := TRUE, pop_up_everywhere := TRUE, detail_warning_visu := 'W66', short_Description := 'Input block shorted');\n\nshorted_input_block_warning: create_warning;\n\t\t\nEND_VAR\n\nVAR_OUTPUT\n\tX1_0_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_0_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_1_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_1_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_2_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_2_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_3_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_3_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_4_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_4_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_5_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_5_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_6_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_6_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_7_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_7_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_8_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_8_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\t\n\tX1_9_pin4: BOOL;   //  pin 4 is 'DI 1'  It's the lower light on the AL2330 and AL2341 blocks, but the upper light on the AL2401!    DI1 is the BLACK wire.   Brown is power (+24v)\n\tX1_9_pin2: BOOL;   //  pin 2 is 'DI 2'  It's the upper light on the AL2330 and AL2341 blocks, but the lower light on the AL2401!    DI2 is the WHITE wire.   Brown is power (+24v)\n\nEND_VAR\n\nVAR_OUTPUT\n\tinput_block_available: BOOL;\t// TRUE if the input block is working correctly and connected.\nEND_VAR\n\nVAR_IN_OUT\n\tIO_Link_port: IO_link_port;\t\t//  This is the connection to read data from our Master block.\nEND_VAR","LineInfoPersistence":"(string)bfc94197-1a91-4c54-80f1-14b88b6147fa_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)1391","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}